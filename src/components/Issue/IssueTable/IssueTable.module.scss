@import "../../../sass/main.scss";
.IssueTable {
  table {
    background-color: white;
    margin: 0 auto 0 auto;
    max-width: 970px;
    padding: 20px;
    border-radius: 15px;
    th {
      color: $main-color;

      > button {
        background-color: transparent;
        border: none;
        color: $main-color;
        display: flex;
        font-weight: bold;
        font-size: 1em;
        cursor: pointer;
        border-radius: 10px;
        background-image: linear-gradient(#f0f0f0, #eeeeee);
        background-position: 50% 50%;
        background-repeat: no-repeat;
        background-size: 0% 100%;
        transition: background-size 0.5s ease-out, color 0.5s ease-out;
        &:hover {
          background-size: 100% 100%;
        }
      }
    }
  }

  /*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
  @media only screen and (max-width: 760px),
    (min-device-width: 768px) and (max-device-width: 1024px) {
    /* Force table to not be like tables anymore */
    table,
    thead,
    tbody,
    th,
    td,
    tr {
      display: block;
      font-size: 13px;
    }

    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr {
      position: absolute;
      top: -9999px;
      left: -9999px;
    }

    tr {
      margin: 0 0 1rem 0;
    }

    tr:nth-child(even) {
      background: #ccc;
      td {
        color: white;
      }
    }

    td {
      /* Behave  like a "row" */
      border: none;
      border-bottom: 1px solid #eee;
      position: relative;
      padding-left: 50%;
    }
    td:before {
      /* Now like a table header */
      position: absolute;
      /* Top/left values mimic padding */
      top: 0;
      left: 6px;
      width: 45%;
      padding-right: 10px;
      white-space: nowrap;
      color: $main-color;
    }

    /*
      Label the data
  You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
      */

    td:nth-of-type(1):before {
      content: "Arıza id";
    }
    td:nth-of-type(2):before {
      content: "Bilgisayar adı";
    }
    td:nth-of-type(3):before {
      content: "Gönderen Adı";
    }
    td:nth-of-type(4):before {
      content: "Gönderen Ünvan";
    }
    td:nth-of-type(5):before {
      content: "Gönderen Mesajı";
    }
    td:nth-of-type(6):before {
      content: "Gönderilme Tarihi";
    }
    td:nth-of-type(7):before {
      content: "Çözülme Durumu";
    }
    td:nth-of-type(8):before {
      content: "Problemi Çözen";
    }
    td:nth-of-type(9):before {
      content: "Çözen Mesajı";
    }
    td:nth-of-type(10):before {
      content: "";
    }
    td:nth-of-type(11):before {
      content: "";
    }
  }
}
